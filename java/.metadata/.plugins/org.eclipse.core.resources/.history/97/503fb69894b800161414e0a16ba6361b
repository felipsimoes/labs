package view;

import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

import business.FormAbstrato;

@SuppressWarnings("serial")
public class Formulario extends FormAbstrato {
	
	private JFrame form;
	private JLabel lblEndereco;
	private JTextField txtEndereco;
	private Container painel;
	private JButton btnIncluir;
	private ArrayList<String> refLista;
	private boolean alterar = false;
	private int id;
	private JLabel lblArea;
	private JLabel lblQuartos;
	private JLabel lblValor;
	private JTextField txtArea;

	public Formulario(ArrayList<String> lista) {
		refLista = lista;
		inicializarComponentes();
	}
	
	public Formulario(ArrayList<String> lista, int id) {
		refLista = lista;
		this.id = id;
		alterar = true;
		inicializarComponentes();
		preparaParaEditar();
	}

	private void preparaParaEditar() {
		String elemento = refLista.get(id);
		txtEndereco.setText(elemento);
	}

	protected void inicializarComponentes(){
		declaraForm();

		painel = form.getContentPane();

		declaraLabels();

		declarandoTxtFields();

		definirBotoes();

		form.setVisible(true);
	}

	private void declarandoTxtFields() {
		defineTxtFieldEndereco();
		defineTxtFieldArea();
//		defineTxtFieldQuartos();
//		defineTxtFieldsValor();
	}

	private void defineTxtFieldArea() {
		txtArea = new JTextField();
		txtArea.setBounds(150, 60, 230, 25);
		txtArea.setFont(new Font("Verdana", Font.PLAIN, 12));
		txtArea.addKeyListener(new KeyListener() {
			@Override
			public void keyTyped(KeyEvent e) {
				String numeros = "0123456789";
				if (!numeros.contains(e.getKeyChar() + "")){
					e.consume();
				}
			}

			@Override
			public void keyPressed(KeyEvent e) {
			}

			@Override
			public void keyReleased(KeyEvent e) {
			}
		});
		painel.add(txtArea);		
	}

	private void defineTxtFieldEndereco() {
		txtEndereco = new JTextField();
		txtEndereco.setBounds(150, 30, 230, 25);
		txtEndereco.setFont(new Font("Verdana", Font.PLAIN, 12));
		txtEndereco.addKeyListener(new KeyListener() {
			@Override
			public void keyTyped(KeyEvent e) {
				String numeros = "0123456789";
				if (numeros.contains(e.getKeyChar() + "")){
					e.consume();
				}
			}

			@Override
			public void keyPressed(KeyEvent e) {
				if (e.getKeyCode() == KeyEvent.VK_ENTER){
					confirmarInclusao();
				}
			}

			@Override
			public void keyReleased(KeyEvent e) {
				btnIncluir.setEnabled(txtEndereco.getText().length() >= 2);
			}
		});
		painel.add(txtEndereco);
	}

	protected void declaraLabels() {
		lblEndereco = new JLabel("Endereço:");
		lblEndereco.setBounds(25, 30, 100, 25);
		lblEndereco.setForeground(Color.BLUE);
		lblEndereco.setFont(FONT_ARIAL_BOLD);
		
		lblArea = new JLabel("Área total (m²):");
		lblArea.setBounds(25, 60, 110, 25);
		lblArea.setForeground(Color.BLUE);
		lblArea.setFont(FONT_ARIAL_BOLD);
		
		lblQuartos = new JLabel("Quartos:");
		lblQuartos.setBounds(25, 90, 100, 25);
		lblQuartos.setForeground(Color.BLUE);
		lblQuartos.setFont(FONT_ARIAL_BOLD);
		
		lblValor = new JLabel("Valor locação:");
		lblValor.setBounds(25, 120, 100, 25);
		lblValor.setForeground(Color.BLUE);
		lblValor.setFont(FONT_ARIAL_BOLD);
		
		painel.add(lblEndereco);
		painel.add(lblArea);
		painel.add(lblQuartos);
		painel.add(lblValor);
	}

	private void declaraForm() {
		form = new JFrame();
		form.setTitle("Trabalho P1 - CRUD em ArrayList");
		form.setBounds(350, 150, 450, 350);
		form.setLayout(null);
		form.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
	}

	private void definirBotoes() {
		String txtBotao = "Incluir Item";
		if(alterar) 
			txtBotao = "Alterar Item";
		btnIncluir = new JButton(txtBotao);
		btnIncluir.setBounds(100, 150, 200, 25);
		btnIncluir.setEnabled(alterar);
		btnIncluir.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				defineOperacao();
			}
		});
		painel.add(btnIncluir);
	}

	protected void defineOperacao() {
		if(alterar)
			confirmarAlteracao();
		else
			confirmarInclusao();
	}

	private void confirmarAlteracao() {
		refLista.set(id, txtEndereco.getText().toString());
		JOptionPane.showMessageDialog(null, "Item alterado!");
	}

	private void confirmarInclusao(){
		refLista.add(txtEndereco.getText().toString());
		JOptionPane.showMessageDialog(null,  "Item incluído!"); 
	}
}
