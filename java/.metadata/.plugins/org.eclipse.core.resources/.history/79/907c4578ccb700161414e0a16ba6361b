package view;

import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public class Formulario {
	private JFrame form;
	private JLabel lblNome;
	private JTextField txtNome;
	private JButton btnSaudar;

	public Formulario() {
		inicializarComponentes();
	}

	private void inicializarComponentes(){
		// instancia objeto da classe JFrame
		form = new JFrame();
		// configura o título do formulário
		form.setTitle("Swing - eventos de tecla (KeyListener)");
		// define posição inicial e tamanho do form
		form.setBounds(350, 150, 400, 300);
		// elimina configurações padrões de laytou
		form.setLayout(null);
		// configura operação padrão ao fechar o formulário
		form.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		// recupera a área de conteúdo do form
		Container painel = form.getContentPane();

		Font fontLabel = new Font("Arial", Font.BOLD, 16);
		// instancia objeto JLabel
		lblNome = new JLabel("Nome:");
		// configura posição e tamanho
		lblNome.setBounds(25, 30, 60, 25);
		// configura fonte
		lblNome.setForeground(Color.BLUE);
		lblNome.setFont(fontLabel);
		// adiciona label à area de conteúdo visual do form
		painel.add(lblNome);

		txtNome = new JTextField();
		txtNome.setBounds(90, 30, 230, 25);
		txtNome.setFont(new Font("Verdana", Font.PLAIN, 12));
		txtNome.addKeyListener(new KeyListener() {
			@Override
			public void keyTyped(KeyEvent e) {
				// impedir que seja digitado um valor numérico na caixa de texto de nome;
				String numeros = "0123456789";
				// verifica se a tecla digitada é um número
				if (numeros.contains(e.getKeyChar() + "")){
					// interrompe (ou impede) a conclusão do evento da digitação
					e.consume();
				}
			}

			@Override
			public void keyPressed(KeyEvent e) {
				// ao teclar <ENTER>, enviar a saudação (como se o usuário tivesse clicado no botão);
				if (e.getKeyCode() == KeyEvent.VK_ENTER){
					enviarSaudacao();
				}
			}

			@Override
			public void keyReleased(KeyEvent e) {
				// habilitar o botão (para envio de saudação) somente se houver 2 ou mais 
				// caracteres digitados na caixa de texto.
				btnSaudar.setEnabled(txtNome.getText().length() >= 2);
			}
		});
		painel.add(txtNome);

		btnSaudar = new JButton("Enviar saudação!");
		btnSaudar.setBounds(100, 150, 200, 25);
		btnSaudar.setEnabled(false);
		// implementa dinamicamente a interface ActionListener, 
		// utilizando o conceito de "inner class" e 
		// "objeto anônimo"
		btnSaudar.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				enviarSaudacao();
			}
		});
		painel.add(btnSaudar);

		// exibe o formulário
		form.setVisible(true);
	}

	private void enviarSaudacao(){
		JOptionPane.showMessageDialog(null,  "Olá, " + txtNome.getText() + "!" );    }
}
